import React, { useState, useEffect } from 'react';
import axios from 'axios';

const {{ component.name }}{{ view }} = ({ onEdit, onDelete, onSelect, id, data: passedData }) => {
    const [data, setData] = useState(passedData || []);
    const [formData, setFormData] = useState({});
    {% if view == 'List' %}
        const [loading, setLoading] = useState(!passedData);
    {% else %}
        const [loading, setLoading] = useState(!passedData && id);
    {% endif %}
    const [error, setError] = useState(null);

    const API_BASE_URL = `${process.env.REACT_APP_API_HOST}:${process.env.REACT_APP_API_PORT}`;


    {% if view == 'List' %}
    useEffect(() => {
        if (!passedData ) {
            axios.get(`${API_BASE_URL}/api/{{ component.name | lower }}s`)
                .then(response => {
                    setData(response.data);
                    setLoading(false);
                })
                .catch(error => {
                    console.error('Error fetching data:', error);
                    setError(error);
                    setLoading(false);
                });
        }
    }, [id, passedData]);
    {% elif view == 'Form' %}
    useEffect(() => {
        if (!passedData && id) {
            axios.get(`${API_BASE_URL}/api/{{ component.name | lower }}s/${id}`)
                .then(response => {
                    setFormData(response.data);
                    setLoading(false);
                })
                .catch(error => {
                    console.error('Error fetching form data:', error);
                    setError(error);
                    setLoading(false);
                });
        }
    }, [id, passedData]);
    {% endif %}




    const handleInputChange = (e) => {
        const { name, value } = e.target;
        setFormData({
            ...formData,
            [name]: value,
        });
    };

    const handleSubmit = (e) => {
        e.preventDefault();
        const method = id ? 'put' : 'post';
        const url = id
            ? `${API_BASE_URL}/api/{{ component.name | lower }}s/${id}`
            : `${API_BASE_URL}/api/{{ component.name | lower }}s/`;

        axios[method](url, formData)
            .then(response => {
                console.log('Data saved successfully:', response.data);
            })
            .catch(error => {
                console.error('Error saving data:', error);
                setError(error);
            });
    };

    if (loading) return <div>Loading...</div>;
    if (error) return <div>Error: {error.message}</div>;

    let fields = {{ component.fields | tojson }};

    return (
        <div>
            {% if view == 'List' %}
            <table className="table">
                <thead>
                    <tr>
                        <th>ID</th>
                        {% for field in component.fields %}
                        <th>{{field.name}}</th>
                        {% endfor %}
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    {data.map(item => (
                        <tr key={item.id} onClick={() => onSelect && onSelect(item)} className="clickable-row">
                            <td>{item.id}</td>
                            {% for field in component.fields %}
                            <td>{item["{{field.name}}"]}</td>
                            {% endfor %}
                            <td>
                                {onEdit && <button onClick={(e) => { e.stopPropagation(); onEdit(item); }}>Edit</button>}
                                {onDelete && <button onClick={(e) => { e.stopPropagation(); onDelete(item.id); }}>Delete</button>}
                            </td>
                        </tr>
                    ))}
                </tbody>
            </table>
            {% elif view == 'Form' %}
            <form onSubmit={handleSubmit}>
                {fields.map((field) => (
                    <div key={field.name}>
                        <label htmlFor={field.name}>{field.name}</label>
                        <input
                            type={field.type}
                            id={field.name}
                            name={field.name}
                            value={formData[field.name] || ''}
                            onChange={handleInputChange}
                        />
                    </div>
                ))}
                <button type="submit">{id ? 'Update' : 'Create'}</button>
            </form>
            {% elif view == 'Detail' %}
            <div>
                {Object.keys(data).map(key => (
                    <p key={key}>
                        <strong>{key}:</strong> {data[key]}
                    </p>
                ))}
            </div>
            {% endif %}
        </div>
    );
};

export default {{ component.name }}{{ view }};
